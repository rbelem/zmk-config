// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT


#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

#define BR_GRAVE LS(LBKT)
#define BR_QUOTE GRAVE
#define BR_TILDE QUOT
#define BR_SEMI SLASH
#define BR_LBKT RBKT
#define BR_RBKT BSLH
#define BR_SLASH (ZMK_HID_USAGE(HID_USAGE_KEY, HID_USAGE_KEY_KEYBOARD_INTERNATIONAL1))
#define BR_BSLH NON_US_BSLH

#define AS(keycode) &as LS(keycode) keycode // Autoshift Macro
// Macro to apply momentary-layer-on-hold/toggle-layer-on-tap
// to a specific layer
#define MO_TOG(layer) &mo_tog layer layer
#define KP_SL_TO(key, layer) &kp_sl_to key layer layer

#define BAS 0
#define NUM 1
#define NPD 2
#define SYM 3
#define NAV 4
#define MUL 5
#define FUN 6
#define MNT 7
#if IS_ENABLED(CONFIG_ZMK_MOUSE)
#define MOS 8
#endif // IS_ENABLED(CONFIG_ZMK_MOUSE)

&caps_word {
  continue-list = <UNDERSCORE MINUS BACKSPACE>;
};

&mt {
  tapping-term-ms = <250>;
};

&sl {
  release-after-ms = <400>;
};

/ {
  behaviors {
    lm: lm {
      label = "Layer Mod";
      wait-ms = <0>;
      tap-ms = <0>;
      compatible = "zmk,behavior-macro-two-param";
      #binding-cells = <2>;
      bindings = <&macro_param_1to1>,
        <&macro_press &mo MACRO_PLACEHOLDER>,
        <&macro_param_2to1>,
        <&macro_press &kp MACRO_PLACEHOLDER>,
        <&macro_pause_for_release>,
        <&macro_param_2to1>,
        <&macro_release &kp MACRO_PLACEHOLDER>,
        <&macro_param_1to1>,
        <&macro_release &mo MACRO_PLACEHOLDER>;
    };
    csl: clear_sl {
      label = "Clear + Sticky Layer";
      wait-ms = <0>;
      tap-ms = <0>;
      compatible = "zmk,behavior-macro-one-param";
      #binding-cells = <1>;
      bindings = <&macro_tap &kp K_CANCEL>,
        <&macro_param_1to1>,
        <&macro_press &sl MACRO_PLACEHOLDER>,
        <&macro_pause_for_release>,
        <&macro_param_1to1>,
        <&macro_release &sl MACRO_PLACEHOLDER>;
    };
    kp_sl: keypress_stickylayer {
      compatible = "zmk,behavior-hold-tap";
      label = "kp_sl";
      #binding-cells = <2>;
      flavor = "tap-unless-interrupted";
      tapping-term-ms = <400>;
      bindings = <&kp>, <&csl>;
    };
    l_td: left_tap_dance {
        compatible = "zmk,behavior-tap-dance";
        #binding-cells = <0>;
        tapping-term-ms = <400>;
        bindings = <&kp_sl LCTL SYM>, <&lm SYM LCTL>, <&kp RCTRL>;
    };
    r_td: right_tap_dance {
        compatible = "zmk,behavior-tap-dance";
        #binding-cells = <0>;
        tapping-term-ms = <400>;
        bindings = <&kp_sl LGUI NUM>, <&lm NUM LGUI>;
    };
  };

  combos {
    #include "combos.dtsi"
  };
};

/*           34 Keys
╭──────────────╮ ╭──────────────╮
│ 0  1  2  3  4│ │ 5  6  7  8  9│
│10 11 12 13 14│ │15 16 17 18 19│
│20 21 22 23 24│ │25 26 27 28 29│
╰────────╮30 31│ │32 33╭────────╯
         ╰─────╯ ╰─────╯         */

/ {
  keymap {
    compatible = "zmk,keymap";

    qwerty_layer {
// -----------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T  | |  Y  |  U  |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G  | |  H  |  J  |  K  |  L  |  ~  |
// |  Z  |  X  |  C  |  V  |  B  | |  N  |  M  |  ,  |  .  |  ;  |
//                   |LCTL | SPC | |LGUI |LALT |
      bindings = <
&kp Q &kp W &kp E &kp R &kp T &kp Y &kp U &kp I     &kp O   &kp P
&kp A &kp S &kp D &kp F &kp G &kp H &kp J &kp K     &kp L   &kp BR_TILDE
&kp Z &kp X &kp C &kp V &kp B &kp N &kp M &kp COMMA &kp DOT &kp BR_SEMI
&l_td &mt LSHFT SPACE &r_td &mt LALT LS(RALT)
      >;
    };

   number_layer {
// -----------------------------------------------------------------
// |  1  |  2  |  3  |  4  |  5  | |  6  |  7  |  8  |  9  |  0  |
// |     |     |     |     |     | |  [  |  -  |  =  |  `  |  '  |
// |     |     |     |     |     | |  ]  |  \  |  ,  |  .  |  /  |
//                   |LCTL | SPC | |LGUI |LALT |
      bindings = <
&kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6      &kp N7      &kp N8    &kp N9       &kp N0
&none  &none  &none  &none  &none  &kp BR_LBKT &kp MINUS   &kp EQUAL &kp BR_GRAVE &kp BR_QUOTE
&none  &none  &none  &none  &none  &kp BR_RBKT &kp BR_BSLH &kp COMMA &kp DOT      &kp BR_SLASH
&trans &trans &trans &trans
      >;
    };

    numpad_layer {
// -----------------------------------------------------------------
// |     |     |  /  |  *  |     | |  0  |  1  |  2  |  3  |     |
// |     |     |  -  |  +  |     | |  .  |  4  |  5  |  6  |     |
// |     |     |  %  |  =  |     | |  ~  |  7  |  8  |  9  |     |
//                   |LCTL | SPC | |LGUI |LALT |
      bindings = <
&none &none &kp SLASH &kp STAR  &none &kp N0    &kp N1 &kp N2 &kp N3 &none
&none &none &kp MINUS &kp PLUS  &none &kp DOT   &kp N4 &kp N5 &kp N6 &none
&none &none &kp PRCT  &kp EQUAL &none &kp TILDE &kp N7 &kp N8 &kp N9 &none
&trans &trans &trans &trans
      >;
    };

   symbol_layer {
// -----------------------------------------------------------------
// |  !  |  @  |  #  |  $  |  %  | |  ¨  |  &  |  *  |  (  |  )  |
// |     |     |     |     |     | |  {  |  _  |  +  |  `  |  "  |
// |     |     |     |     |     | |  }  |  |  |  <  |  >  |  ?  |
//                   |LCTL | SPC | |LGUI |LALT |
      bindings = <
&kp LS(N1) &kp LS(N2) &kp LS(N3) &kp LS(N4) &kp LS(N5) &kp LS(N6)      &kp LS(N7)      &kp LS(N8)    &kp LS(N9)       &kp LS(N0)
&none      &none      &none      &none      &none      &kp LS(BR_LBKT) &kp LS(MINUS)   &kp LS(EQUAL) &kp LS(BR_GRAVE) &kp LS(BR_QUOTE)
&none      &none      &none      &none      &none      &kp LS(BR_RBKT) &kp LS(BR_BSLH) &kp LS(COMMA) &kp LS(DOT)      &kp LS(BR_SLASH)
&trans &trans &trans &trans
      >;
    };

    nav_layer {
// -----------------------------------------------------------------
// |LSHFT|LGUI |LALT |LCTL |     | | HOM |PG_DN|PG_UP| END |     |
// |     |     |     |     |     | | LFT | DWN | U P |RIGHT|     |
// |     |     |     |     |     | |     |     |     |     |     |
//                   |LCTL | SPC | |LGUI |LALT |
      bindings = <
&kp LSHFT &kp LGUI &kp LALT &kp LCTL &none &kp HOME &kp PG_DN &kp PG_UP &kp END   &none
&none     &none    &none    &none    &none &kp LEFT &kp DOWN  &kp UP    &kp RIGHT &none
&none     &none    &none    &none    &none &none    &none     &none     &none     &none
&trans &trans &trans &trans
      >;
    };

    multimedia_layer {
// -----------------------------------------------------------------
// |     |     |     |     |     | |     |BRIDN|BRIUP|     | BT0 |
// |     |     |     |     |     | |VMUTE|VOLDN|VOLUP|     | BT1 |
// |     |     |     |     |     | |PREV |STOP |PLAY |NEXT | BT2 |
//                   |LCTL | SPC | |LGUI |LALT |
      bindings = <
&none &none &none &none &none &none      &kp C_BRI_DN &kp C_BRI_UP &none      &none
&none &none &none &none &none &kp K_MUTE &kp C_VOL_DN &kp C_VOL_UP &none      &none
&none &none &none &none &none &kp C_PREV &kp C_STOP   &kp C_PP     &kp C_NEXT &none
&none &none &none &none
      >;
    };

    fun_layer {
// -----------------------------------------------------------------
// |     | F 3 | F 2 | F 1 | F10 | |     |     |     |     |     |
// |     | F 6 | F 5 | F 4 | F11 | |     |     |     |     |     |
// |     | F 9 | F 8 | F 7 | F12 | |     |     |     |     |     |
//                   |LCTL | SPC | |LGUI |LALT |
      bindings = <
&none &sk F3 &sk F2 &sk F1 &sk F10 &none &none &none &none &none
&none &sk F6 &sk F5 &sk F4 &sk F11 &none &none &none &none &none
&none &sk F9 &sk F8 &sk F7 &sk F12 &none &none &none &none &none
&trans &trans &trans &trans
      >;
    };

    maint_layer {
// -----------------------------------------------------------------
// |     | BT2 | BT1 | BT0 | BLE | |     |     |     |     |     |
// |     |     |     |     | USB | |     |     |     |     |     |
// |     |BOOTL|RESET|BTCLR|     | |     |     |     |     |     |
//                   |BTPRV|BTNXT| |     |     |
      // impactful buttons
      // Bluetooth clear, reset, chaning BLE/USB preference, bootloader
      bindings = <
&none &bt BT_SEL 2 &bt BT_SEL 1 &bt BT_SEL 0 &out OUT_BLE &none &none &none &none &none
&none &none        &none        &none        &out OUT_USB &none &none &none &none &none
&none &bootloader  &sys_reset   &bt BT_CLR   &none        &none &none &none &none &none
&bt BT_PRV &bt BT_NXT &none &none
      >;
    };

#if IS_ENABLED(CONFIG_ZMK_MOUSE)
    mouse_layer {
// -----------------------------------------------------------------
// |LSHFT|LGUI |LALT |LCTL |     | |SCR L|SCRDN|SCRUP|SCR R|     |
// |     |     |     |     |     | |MOV L|MOVDN|MOVUP|MOV R|     |
// |     |     |     |     |     | |     |     |     |     |     |
//                   |LCTL | SPC | |LCLK |RCLK |
      bindings = <
&kp LSHFT &kp LGUI &kp LALT &kp LCTL &none &mwh SCROLL_LEFT &mwh SCROLL_DOWN &mwh SCROLL_UP &mwh SCROLL_RIGHT &none
&none     &none    &none    &none    &none &mmv MOVE_LEFT   &mmv MOVE_DOWN   &mmv MOVE_UP   &mmv MOVE_RIGHT   &none
&none     &none    &none    &none    &none &none            &none            &none          &none             &none
&trans &trans &mkp LCLK &mkp RCLK
      >;
    };
#endif // IS_ENABLED(CONFIG_ZMK_MOUSE)

  };
};
